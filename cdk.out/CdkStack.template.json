{
 "Resources": {
  "Lambda1ServiceRoleEBABAF1A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/Lambda-1/ServiceRole/Resource"
   }
  },
  "Lambda158B6D6F9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-000000000000-us-east-1",
     "S3Key": "61b381b19a9057464e40cc768029ec833554cf20091f0acd3426275d3c4d7a58.zip"
    },
    "FunctionName": "lambda-dev",
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "Lambda1ServiceRoleEBABAF1A",
      "Arn"
     ]
    },
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "Lambda1ServiceRoleEBABAF1A"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/Lambda-1/Resource",
    "aws:asset:path": "asset.61b381b19a9057464e40cc768029ec833554cf20091f0acd3426275d3c4d7a58",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "api199AF8C04": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "api-dev"
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/api_1/Resource"
   }
  },
  "api1CloudWatchRole64C089EE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CdkStack/api_1/CloudWatchRole/Resource"
   }
  },
  "api1AccountFDCD6058": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "api1CloudWatchRole64C089EE",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "api199AF8C04"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CdkStack/api_1/Account"
   }
  },
  "api1Deployment09A80E5Ff144b805765b321fa2b29861c8b67832": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "api199AF8C04"
    }
   },
   "DependsOn": [
    "api1proxyANY233D83F1",
    "api1proxyECFB00F3",
    "api1ANY97BB2804"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CdkStack/api_1/Deployment/Resource"
   }
  },
  "api1DeploymentStageprod395691EE": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "api1Deployment09A80E5Ff144b805765b321fa2b29861c8b67832"
    },
    "RestApiId": {
     "Ref": "api199AF8C04"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "api1AccountFDCD6058"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/api_1/DeploymentStage.prod/Resource"
   }
  },
  "api1proxyECFB00F3": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "api199AF8C04",
      "RootResourceId"
     ]
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "api199AF8C04"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/api_1/Default/{proxy+}/Resource"
   }
  },
  "api1proxyANYApiPermissionCdkStackapi11A84FE31ANYproxy43C684DE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Lambda158B6D6F9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:000000000000:",
       {
        "Ref": "api199AF8C04"
       },
       "/",
       {
        "Ref": "api1DeploymentStageprod395691EE"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/api_1/Default/{proxy+}/ANY/ApiPermission.CdkStackapi11A84FE31.ANY..{proxy+}"
   }
  },
  "api1proxyANYApiPermissionTestCdkStackapi11A84FE31ANYproxy63A52648": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Lambda158B6D6F9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:000000000000:",
       {
        "Ref": "api199AF8C04"
       },
       "/test-invoke-stage/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/api_1/Default/{proxy+}/ANY/ApiPermission.Test.CdkStackapi11A84FE31.ANY..{proxy+}"
   }
  },
  "api1proxyANY233D83F1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "Lambda158B6D6F9",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "api1proxyECFB00F3"
    },
    "RestApiId": {
     "Ref": "api199AF8C04"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/api_1/Default/{proxy+}/ANY/Resource"
   }
  },
  "api1ANYApiPermissionCdkStackapi11A84FE31ANY0AF3D73F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Lambda158B6D6F9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:000000000000:",
       {
        "Ref": "api199AF8C04"
       },
       "/",
       {
        "Ref": "api1DeploymentStageprod395691EE"
       },
       "/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/api_1/Default/ANY/ApiPermission.CdkStackapi11A84FE31.ANY.."
   }
  },
  "api1ANYApiPermissionTestCdkStackapi11A84FE31ANY824B998C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Lambda158B6D6F9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:000000000000:",
       {
        "Ref": "api199AF8C04"
       },
       "/test-invoke-stage/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/api_1/Default/ANY/ApiPermission.Test.CdkStackapi11A84FE31.ANY.."
   }
  },
  "api1ANY97BB2804": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "Lambda158B6D6F9",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "api199AF8C04",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "api199AF8C04"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/api_1/Default/ANY/Resource"
   }
  },
  "vpcdev23DBEF46": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/Resource"
   }
  },
  "vpcdevPublicSubnet1Subnet0D9213EB": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet1/Subnet"
   }
  },
  "vpcdevPublicSubnet1RouteTable04D37FA0": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet1/RouteTable"
   }
  },
  "vpcdevPublicSubnet1RouteTableAssociationC9DCE81C": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcdevPublicSubnet1RouteTable04D37FA0"
    },
    "SubnetId": {
     "Ref": "vpcdevPublicSubnet1Subnet0D9213EB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet1/RouteTableAssociation"
   }
  },
  "vpcdevPublicSubnet1DefaultRouteC5621916": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "vpcdevIGWC392FA77"
    },
    "RouteTableId": {
     "Ref": "vpcdevPublicSubnet1RouteTable04D37FA0"
    }
   },
   "DependsOn": [
    "vpcdevVPCGW3A55C3D4"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet1/DefaultRoute"
   }
  },
  "vpcdevPublicSubnet1EIP18EDD5E4": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet1/EIP"
   }
  },
  "vpcdevPublicSubnet1NATGatewayF764AD18": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "vpcdevPublicSubnet1EIP18EDD5E4",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "vpcdevPublicSubnet1Subnet0D9213EB"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "vpcdevPublicSubnet1DefaultRouteC5621916",
    "vpcdevPublicSubnet1RouteTableAssociationC9DCE81C"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet1/NATGateway"
   }
  },
  "vpcdevPublicSubnet2Subnet2A3E2E90": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.32.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet2/Subnet"
   }
  },
  "vpcdevPublicSubnet2RouteTable5B3F21CA": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet2/RouteTable"
   }
  },
  "vpcdevPublicSubnet2RouteTableAssociation53DD5595": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcdevPublicSubnet2RouteTable5B3F21CA"
    },
    "SubnetId": {
     "Ref": "vpcdevPublicSubnet2Subnet2A3E2E90"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet2/RouteTableAssociation"
   }
  },
  "vpcdevPublicSubnet2DefaultRouteA5416275": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "vpcdevIGWC392FA77"
    },
    "RouteTableId": {
     "Ref": "vpcdevPublicSubnet2RouteTable5B3F21CA"
    }
   },
   "DependsOn": [
    "vpcdevVPCGW3A55C3D4"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet2/DefaultRoute"
   }
  },
  "vpcdevPublicSubnet2EIPFAAC1D87": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet2/EIP"
   }
  },
  "vpcdevPublicSubnet2NATGateway6AFE20C4": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "vpcdevPublicSubnet2EIPFAAC1D87",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "vpcdevPublicSubnet2Subnet2A3E2E90"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "vpcdevPublicSubnet2DefaultRouteA5416275",
    "vpcdevPublicSubnet2RouteTableAssociation53DD5595"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet2/NATGateway"
   }
  },
  "vpcdevPublicSubnet3Subnet9FC7FD54": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1c",
    "CidrBlock": "10.0.64.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PublicSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet3/Subnet"
   }
  },
  "vpcdevPublicSubnet3RouteTable405C969D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PublicSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet3/RouteTable"
   }
  },
  "vpcdevPublicSubnet3RouteTableAssociationE060D43B": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcdevPublicSubnet3RouteTable405C969D"
    },
    "SubnetId": {
     "Ref": "vpcdevPublicSubnet3Subnet9FC7FD54"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet3/RouteTableAssociation"
   }
  },
  "vpcdevPublicSubnet3DefaultRoute4F3A3657": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "vpcdevIGWC392FA77"
    },
    "RouteTableId": {
     "Ref": "vpcdevPublicSubnet3RouteTable405C969D"
    }
   },
   "DependsOn": [
    "vpcdevVPCGW3A55C3D4"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet3/DefaultRoute"
   }
  },
  "vpcdevPublicSubnet3EIPB67C192B": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PublicSubnet3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet3/EIP"
   }
  },
  "vpcdevPublicSubnet3NATGatewayF8444E4E": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "vpcdevPublicSubnet3EIPB67C192B",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "vpcdevPublicSubnet3Subnet9FC7FD54"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PublicSubnet3"
     }
    ]
   },
   "DependsOn": [
    "vpcdevPublicSubnet3DefaultRoute4F3A3657",
    "vpcdevPublicSubnet3RouteTableAssociationE060D43B"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PublicSubnet3/NATGateway"
   }
  },
  "vpcdevPrivateSubnet1SubnetE9898D5D": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.96.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PrivateSubnet1/Subnet"
   }
  },
  "vpcdevPrivateSubnet1RouteTableA9C9083D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PrivateSubnet1/RouteTable"
   }
  },
  "vpcdevPrivateSubnet1RouteTableAssociation14D4CB19": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcdevPrivateSubnet1RouteTableA9C9083D"
    },
    "SubnetId": {
     "Ref": "vpcdevPrivateSubnet1SubnetE9898D5D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "vpcdevPrivateSubnet1DefaultRoute858B594D": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "vpcdevPublicSubnet1NATGatewayF764AD18"
    },
    "RouteTableId": {
     "Ref": "vpcdevPrivateSubnet1RouteTableA9C9083D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PrivateSubnet1/DefaultRoute"
   }
  },
  "vpcdevPrivateSubnet2SubnetBBC00C4E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.128.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PrivateSubnet2/Subnet"
   }
  },
  "vpcdevPrivateSubnet2RouteTable120F1B12": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PrivateSubnet2/RouteTable"
   }
  },
  "vpcdevPrivateSubnet2RouteTableAssociationDCF81AFD": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcdevPrivateSubnet2RouteTable120F1B12"
    },
    "SubnetId": {
     "Ref": "vpcdevPrivateSubnet2SubnetBBC00C4E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "vpcdevPrivateSubnet2DefaultRoute98D91864": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "vpcdevPublicSubnet2NATGateway6AFE20C4"
    },
    "RouteTableId": {
     "Ref": "vpcdevPrivateSubnet2RouteTable120F1B12"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PrivateSubnet2/DefaultRoute"
   }
  },
  "vpcdevPrivateSubnet3SubnetD9AD7454": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1c",
    "CidrBlock": "10.0.160.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PrivateSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PrivateSubnet3/Subnet"
   }
  },
  "vpcdevPrivateSubnet3RouteTableDDCD0EF0": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev/PrivateSubnet3"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PrivateSubnet3/RouteTable"
   }
  },
  "vpcdevPrivateSubnet3RouteTableAssociation854092B7": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "vpcdevPrivateSubnet3RouteTableDDCD0EF0"
    },
    "SubnetId": {
     "Ref": "vpcdevPrivateSubnet3SubnetD9AD7454"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PrivateSubnet3/RouteTableAssociation"
   }
  },
  "vpcdevPrivateSubnet3DefaultRoute43D63EF5": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "vpcdevPublicSubnet3NATGatewayF8444E4E"
    },
    "RouteTableId": {
     "Ref": "vpcdevPrivateSubnet3RouteTableDDCD0EF0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/PrivateSubnet3/DefaultRoute"
   }
  },
  "vpcdevIGWC392FA77": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "CdkStack/vpc-dev"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/IGW"
   }
  },
  "vpcdevVPCGW3A55C3D4": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "vpcdevIGWC392FA77"
    },
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/vpc-dev/VPCGW"
   }
  },
  "SecurityGroup0C33D8C57": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "CdkStack/SecurityGroup0",
    "GroupName": "secuityGroup01",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/SecurityGroup0/Resource"
   }
  },
  "SecurityGroup0fromCdkStackServiceLBSecurityGroupC824F01080F94AA8EE": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "SecurityGroup0C33D8C57",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ServiceLBSecurityGroupF7435A5C",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/SecurityGroup0/from CdkStackServiceLBSecurityGroupC824F010:80"
   }
  },
  "SecurityGroup0fromCdkStackSecurityGroup021E72BD3IndirectPortCB2B682C": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from CdkStackSecurityGroup021E72BD3:{IndirectPort}",
    "FromPort": {
     "Fn::GetAtt": [
      "RdsInstance1D827D17",
      "Endpoint.Port"
     ]
    },
    "GroupId": {
     "Fn::GetAtt": [
      "SecurityGroup0C33D8C57",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "SecurityGroup0C33D8C57",
      "GroupId"
     ]
    },
    "ToPort": {
     "Fn::GetAtt": [
      "RdsInstance1D827D17",
      "Endpoint.Port"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/SecurityGroup0/from CdkStackSecurityGroup021E72BD3:{IndirectPort}"
   }
  },
  "ClusterEB0386A7": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "ClusterName": "cluster-dev"
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/Cluster/Resource"
   }
  },
  "wpefs403035DF": {
   "Type": "AWS::EFS::FileSystem",
   "Properties": {
    "AvailabilityZoneName": "us-east-1a",
    "Encrypted": true,
    "FileSystemTags": [
     {
      "Key": "Name",
      "Value": "CdkStack/wp_efs"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "CdkStack/wp_efs/Resource"
   }
  },
  "wpefsEfsMountTarget10DDE135E": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "wpefs403035DF"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "SecurityGroup0C33D8C57",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "vpcdevPrivateSubnet1SubnetE9898D5D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/wp_efs/EfsMountTarget1"
   }
  },
  "TaskDefTaskRole1EDB4A67": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/TaskDef/TaskRole/Resource"
   }
  },
  "TaskDef54694570": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "WORDPRESS_DB_NAME",
        "Value": "mydb"
       },
       {
        "Name": "WORDPRESS_DB_USER",
        "Value": {
         "Fn::Join": [
          "",
          [
           "{{resolve:secretsmanager:",
           {
            "Ref": "SecretA720EF05"
           },
           ":SecretString:username::}}"
          ]
         ]
        }
       },
       {
        "Name": "WORDPRESS_DB_PASSWORD",
        "Value": {
         "Fn::Join": [
          "",
          [
           "{{resolve:secretsmanager:",
           {
            "Ref": "SecretA720EF05"
           },
           ":SecretString:password::}}"
          ]
         ]
        }
       },
       {
        "Name": "WORDPRESS_DB_HOST",
        "Value": {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "RdsInstance1D827D17",
             "Endpoint.Address"
            ]
           },
           ":",
           {
            "Fn::GetAtt": [
             "RdsInstance1D827D17",
             "Endpoint.Port"
            ]
           }
          ]
         ]
        }
       },
       {
        "Name": "WORDPRESS_TABLE_PREFIX",
        "Value": "wp"
       }
      ],
      "Essential": true,
      "Image": "wordpress:latest",
      "MountPoints": [
       {
        "ContainerPath": "/var/www/html/",
        "ReadOnly": false,
        "SourceVolume": "efs-volume"
       }
      ],
      "Name": "wordpress-container",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "HostPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "Family": "CdkStackTaskDefF98EAEB7",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "TaskDefTaskRole1EDB4A67",
      "Arn"
     ]
    },
    "Volumes": [
     {
      "EFSVolumeConfiguration": {
       "FilesystemId": {
        "Ref": "wpefs403035DF"
       }
      },
      "Name": "efs-volume"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/TaskDef/Resource"
   }
  },
  "SecretA720EF05": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "GenerateStringKey": "password",
     "SecretStringTemplate": "{\"username\":\"admin\"}"
    },
    "Name": "rds-credentials"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkStack/Secret/Resource"
   }
  },
  "RdsInstanceSubnetGroup9495D83D": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for RdsInstance database",
    "SubnetIds": [
     {
      "Ref": "vpcdevPrivateSubnet1SubnetE9898D5D"
     },
     {
      "Ref": "vpcdevPrivateSubnet2SubnetBBC00C4E"
     },
     {
      "Ref": "vpcdevPrivateSubnet3SubnetD9AD7454"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/RdsInstance/SubnetGroup/Default"
   }
  },
  "RdsInstance1D827D17": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "100",
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t2.micro",
    "DBName": "mydb",
    "DBSubnetGroupName": {
     "Ref": "RdsInstanceSubnetGroup9495D83D"
    },
    "Engine": "mysql",
    "EngineVersion": "8.0",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "SecretA720EF05"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "SecretA720EF05"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "SecurityGroup0C33D8C57",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Snapshot",
   "DeletionPolicy": "Snapshot",
   "Metadata": {
    "aws:cdk:path": "CdkStack/RdsInstance/Resource"
   }
  },
  "ServiceLBE9A1ADBC": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ServiceLBSecurityGroupF7435A5C",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "vpcdevPublicSubnet1Subnet0D9213EB"
     },
     {
      "Ref": "vpcdevPublicSubnet2Subnet2A3E2E90"
     },
     {
      "Ref": "vpcdevPublicSubnet3Subnet9FC7FD54"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "vpcdevPublicSubnet1DefaultRouteC5621916",
    "vpcdevPublicSubnet1RouteTableAssociationC9DCE81C",
    "vpcdevPublicSubnet2DefaultRouteA5416275",
    "vpcdevPublicSubnet2RouteTableAssociation53DD5595",
    "vpcdevPublicSubnet3DefaultRoute4F3A3657",
    "vpcdevPublicSubnet3RouteTableAssociationE060D43B"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/Service/LB/Resource"
   }
  },
  "ServiceLBSecurityGroupF7435A5C": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB CdkStackServiceLB87B99870",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/Service/LB/SecurityGroup/Resource"
   }
  },
  "ServiceLBSecurityGrouptoCdkStackSecurityGroup021E72BD38088E761F5": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "SecurityGroup0C33D8C57",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "ServiceLBSecurityGroupF7435A5C",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/Service/LB/SecurityGroup/to CdkStackSecurityGroup021E72BD3:80"
   }
  },
  "ServiceLBPublicListener46709EAA": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "ServiceLBPublicListenerECSGroup0CC8688C"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ServiceLBE9A1ADBC"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/Service/LB/PublicListener/Resource"
   }
  },
  "ServiceLBPublicListenerECSGroup0CC8688C": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "vpcdev23DBEF46"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/Service/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "Service9571FDD8": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "ClusterEB0386A7"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "wordpress-container",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "ServiceLBPublicListenerECSGroup0CC8688C"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "ENABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "SecurityGroup0C33D8C57",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "vpcdevPublicSubnet1Subnet0D9213EB"
       },
       {
        "Ref": "vpcdevPublicSubnet2Subnet2A3E2E90"
       },
       {
        "Ref": "vpcdevPublicSubnet3Subnet9FC7FD54"
       }
      ]
     }
    },
    "ServiceName": "cluster-dev-wp-Service",
    "TaskDefinition": {
     "Ref": "TaskDef54694570"
    }
   },
   "DependsOn": [
    "ServiceLBPublicListenerECSGroup0CC8688C",
    "ServiceLBPublicListener46709EAA",
    "TaskDefTaskRole1EDB4A67"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkStack/Service/Service/Service"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31TwW7bMAz9lt4VrUkHbFcnaYoA7WbEQa8BLTOuGlsyRCpZYPjfB8lx4rbDTnx8eiLFJ2kmpz+/y+kdnGiiisOk0rlsMwZ1EHCiXVtBnRcg25U3irU1YrE3Y5yiqzWRtqYTGmrZbmyFYSHETtDDDoiQSSYhCHqQc68OyHMgFNDoEhhPcJbtc2y0QeKk0bHADSZKWW9YLLGp7LlGw4EdZRlDGbv2YINkvVMYm6TO/jkPzKVwj1+Q32wRqB51AtVMtq+NCtxruhCpzyutMp8bjC1vaGM94xbyftiev3EJkVUaBpPiQgCP6zSEX8BP/dwidfoIjLfCa8PoDF4F/UkuWcIM6q0fGZV3ms9PzvomnuG/xNqUDom+8I+RDpOTbBeVJ0YXRANcgQtXtAU6LHGvjR5m+sxYw6ANuhF32ZuhO+re+gvsBO5JtitdYXYmxjq+qg/ZS7jwLbgSuROEyiFTDQZKdLLNYn6ZxQWFK0i2S2DIgXBtiMEoFL2rV0OW8y/EII0G7BrgYD7JpGkqreL9PVso5lAFUfFpIKyAWKvKQpFHhTblcSbbf++Otn7IxzpNjOaiGfBovXfievBR2nXX5y7iHwtfQJsyyH57bjx3wtgC5Tt9O87u5fSHvL97J60nzhvWNcpNH/8CebR28QoEAAA="
   },
   "Metadata": {
    "aws:cdk:path": "CdkStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "api1EndpointD71FF83A": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "api199AF8C04"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "api1DeploymentStageprod395691EE"
      },
      "/"
     ]
    ]
   }
  },
  "ServiceLoadBalancerDNSEC5B149E": {
   "Value": {
    "Fn::GetAtt": [
     "ServiceLBE9A1ADBC",
     "DNSName"
    ]
   }
  },
  "ServiceServiceURL250C0FB6": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "ServiceLBE9A1ADBC",
        "DNSName"
       ]
      }
     ]
    ]
   }
  },
  "RDSConnectionString": {
   "Value": {
    "Fn::GetAtt": [
     "RdsInstance1D827D17",
     "Endpoint.Address"
    ]
   }
  },
  "RDSConnectionPort": {
   "Value": {
    "Fn::GetAtt": [
     "RdsInstance1D827D17",
     "Endpoint.Port"
    ]
   }
  },
  "LoadBalancerDNS": {
   "Value": {
    "Fn::GetAtt": [
     "ServiceLBE9A1ADBC",
     "DNSName"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}